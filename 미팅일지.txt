오성훈   2017184018  ==> 다른 팀 이적.

                                     이메일 주소            핸드폰 번호
정의범  2017184030   k56467@naver.com	010-9330-5272
김기윤  2017184004   kimkiyoun33@gmail.com 010-5100-2974
홍진선  2017184037   hjs0913@kpu.ac.kr	010-2052-2419

정내훈 010-8964-9524

2021-05-31
-------------
1. 종합 설계 지도 교수 요청

2. 4명이서 하겠다.
 - 4명이서 하면 그만큼 졸작이 쉬워지기 때문에 합격 난이도가 높아진다.
 - 난이도
  * 상용화 : 스팀이나 앱스토어에 올려서 다운로드 수 3000달성
  * 누구나 인정할 수 있는 대작을 만든다.
   - 예) 이대현 교수님 팀에서는 실제 게임 HW와 결합해서 공공기관 전시회에 전시되는 작품 제작
   - 예) 외부 공모전에 나가서 수상

3. 언리얼 엔진 사용
 - 언리얼을 사용하면 클라이언트가 완성된 상태에서 졸작을 시작하게 되므로, 클라이언트 제작에 버금가는 난이도의 추가작업을 해야 한다.
  * 추가작업 무엇을??? : 
 - 언리얼을 사용하는 이유???
 - 이대현교수님에게 가는 것이 맞을 듯.

4. 클라 2, 서버 2

5. 게임 장르
 - 어드벤처, 멀티플레이어 (4명) RPG
 - 협동/팀플
 - 몬스터/퍼즐/함정/
 - 서버는 별로 할일이 없어 보인다.

6. MMORPG로 한다면
 - 내가 지도해야 한다.
 - 졸업조건 : 스팀 또는 EpicStore 에 출시해서 동접 1000명 까지 기록???

7. 언리얼을 하겠다면 일단 이대현 교수님을 찾아 뵐것.

2021-06-02
------------
1. 장르 변경
 - MMORPG로 변경
 - 언리얼에서 DirectX로 변경
 - 팀원을 3명으로 다이어트

2. 특징
 - 스테이지로 구성된 RAID 시스템
 - 태양계 배경 : 행성별 특징, 태양계 정복
 - 우주선 X

3. 중점 연구 과제
 - 서버에서 동접 5000
 - 퍼즐 시스템 (여러명이 각자 고유 클래스의 스킬을 사용해야 풀리는 퍼즐)

4. 다음 학기에 게임서버프로그래밍 수강 할 것. 클라이언트 담당은 3D 게임 프로그래밍을 수강할 것

5. 역할 분담
 서버 : 정의범, 김기윤
 클라 : 홍진선

6. 2021 2학기
 클라 : 3D 모델 렌더링과 애니메이션
 서버 : 2D 클라이언트를 사용해 서버 구현
 모두 : 기획서 작성 및 중점 연구 분야 정하기

7. 현장실습
 - 이번 여름방학 때 수행할 예정

8. 다음 미팅
 - 6월 25일 오후 2시 30분
 - 팀이름 정해 오기
 - GIT 프로젝트를 하나 만들고 지도교수 초대 (zzapuno@hotmail.com)
 - 중점 연구 분야 생각해 오기 (다른 MMORPG와의 차별점, 기술요소 같은 것들)



2021-06-25
--------------
1. 팀이름/게임이름 : SSU(Solar System Universe)

2. Git 초대 : 완료

3. 중점 연구 분야 => 기술적인 요소는 좀더 고민을 해볼 예정 (수업을 들으면서 계속 고민)
 - 스킨 커스터마이제이션
    => 방패/망토 문양 바꾸기?
    => 3D Max에서 모델링을 변경 가능?
     * 캐릭터 자체 변경가능.
    => 변경된 스킨의 서버 업로드/다른 플레이어 에게도 보이도록 다운로드
 - 레이드 보스 : 공대 구성에 따라 보스의 능력치 변경 => 공략의 재미를 높일 수 있는 방향으로 변경
    => 좀더 고민을 해볼 것
 - 레이드 패턴을 하드코딩이 아니라 스크립트로 조절 가능하다. (게임서버프로그래밍 수업시간에 다룸)

4. 게임 특징
 - 레이드 : 
 - 길드 : 속성이 있다. 개수가 정해져 있다 => 국가/종족/팩션으로 이름을 바꿔야 한다.
   => 속성의 상성을 데미지 증/감으로 적용
   => 길드들이 연합을 하면 증/감이 합쳐짐 => 랜덤 복불복
     * 불과 물이 합쳐지면 아무런 속성이 없는 무속성 길드가 되어 버린다.
     * 공통 약점이 있는 경우 약점이 2배

5. 다음 미팅
 - 8월 23일 월요일 오후 4시 30분 (현장실습 종료)
 - 클라 : DirectX로 화면에 빨간색 원기둥(높이 2미터, 반지름 20cm) 을 그리고 화살표키로 이동, 바닥에는 검은 정육면체가 5미터 간격으로 격자모양으로 배치되어 있다. (32 X 32)
    = 다같이 진행하도록. (이용희 교수님 동영상을 보고, DirextX 교재를 구입해서 따라해 보면서 만들것)
 - 서버 : 레이드 기획문서 작성 : 로스트 아크의 레이드 보스를 하나 골라서 레이드 기획문서를 작성해 올것 (보스의 공격 패턴(시간별, 보스 체력별, 사용 스킬, 이동 위치 등등), 공략 시나리오...)
     = http://www.yes24.com/Product/Goods/71768958 (게임서버 프로그래밍 교과서) 챕터 2/3/4를 읽고 이해가 되지 않는 것을 정리해 올것.

2021-08-23
-------------
1. 진행상황
 - 클라이언트 작성 : DirectX12에서 직육면체 이동
 - 기획서 : 로스트아크의 아르고스 레이드 1페이지 역기획서 작성
 - 교과서 읽어오기 => 샘플코드가 슈도코드라서 실행을 시켜보지 못함.

2. ToDo
 - 기획 : 지구 행성, 보스 (최소한의 패턴) => 기획해 오기, 금성 보스까지.
 - 클라이언트 : Shading 넣기 (Directional Light를 구현하기,  빛을 받는 부분은 밝고, 반대편은 어둡다.)
  * 내가 보았을 때는 Shader.hlsl의 VS만 수정하면 될듯,  Light의 Direction을 input에 추가하고, 표면의 노멀값과 light의 방향의 각도차이로 color를 어둡게 하면 됨.
 - 서버 : 서버게임프로그래밍 수업 따라오기
 
3.다음 미팅
 - 9월 9일 오전 11시 30분

2021-09-09
------------
1. 진행상황
 - 금성, 지구레이드 패턴 기획
 - 기존의 길드를 국가로 변경하고, 길드는 별도 시스템으로 추가
   * 국가는 캐릭터 생성시 결정하고 변경 불가
   * 6개의 국가
   * 국가전 => 땅따먹기가 아니라 친선시합, 우승 시 버프효과
 - 클라이언트 오류 => 에러 메세지를 출력하면서 디버깅 하자.
 - 서버 : 아직 진도가 네트워크 프로그래밍까지 가지 않았다.

2. 다음미팅
 - 9월 27일 월요일 오후 6시
 - 기획 : 국가시스템, 속성, 상성, 페털티와 어드밴티지, 친선시합?, 우승자 버프시스템
 - 클라 : 디버깅 => Lighting
 - 서버 : 네트워크 프로그래밍 수업 잘 듣기

2021-09-27
------------
1. 진행상황
 - 국가시시스템 기획
 - 클라 : 디버깅 => Lighting
  * 잘 돌아가는 기존 샘플부터 다시 시작.
 - 서버 : 네트워크 프로그래밍 수업 잘 듣기

2. 다음 미팅
 - 기획 : 기본 전투 기획 (능력치, 몬스터, 스킬, 마법)
  * HP (?? - ???? ), MP(?? - ????), 물리공격력(?? - ???), 마법공격력, 물리방어력, 마법방어력
  * 레벨(1 - 100),  경험치
  * 기본 전투 공식 : 데미지 = 스킬공격력 + 물리공격력 * 속성보정 - 물리방어력 * 속성보정 -
  * 직업 하나와 몬스터하나를 정한 다음에 평타/스킬 공격시 기본 전투 공식 만들어 오기 (레벨보정, 스킬보정, ....)
 - 10월 13일 수요일 오후 1시 30분
 - 전투구현 시작

2021-10-13
-------------
1. 진행상황
 - 클라이언트 : 진행상황 없음
 - 기획 : 전투 기획 (공격속도는 없는가? 크리티컬은 없는가?)

2. 전투구현 시작
 - 서버에서 전투 구현 : 클라이언트는 게임서버프로그래밍에서 사용했던 2D 클라이언트를 그대로 사용, 서버는 IOCP
  * 서버에 몬스터 한마리를 생성 : 클라이언트에 PUT_OBJECT로 몬스터 표시
   - 몬스터와 플레이어는 전투 기획서에 적힌대로 50레벨이고 각각 속성을 가짐
  * 플레이어가 몬스터 바로 앞에 다가가서 A키를 누르면 공격 시작
  * 자동전투가 진행되면서 1초에 한번씩 서로 때린다.
   - 서버에서 전투 진행상황을 cout으로 출력 ("플레이어 1이 몬스터 1을 때려서 데미지 430을 입힘 [플레이어HP:321991,  몬스터 HP:312131]"
  * 어느 쪽이던 HP가 0이되면 전투 리셋 (자동전투가 풀리고, HP 완전회복)

3. 다음 미팅
 -11월 1일 월요일 : 오후 6시
 - 클라이언트 버그 수정  => 서버와 연동 [이동을 서버에서 구현, 다른 플레이어와 동시 접속 보이기]
 - 서버에서 전투 구현.
 - 기획 : 몬스터 (10종류 : 레벨/속성/공격스킬,  비쥬얼)
   (앞으로 : 아이템기획, 행성별 스테이지 기획, 몬스터 기획, UI기획, 퀘스트 기획, 스킬트리 기획) => 12월말 발표 이전까지 완성해야 함.


2021-11-01
------------
1. 진행상황
 - 클라이언트 문제 해결 : 화면에 보인다.
 - 서버 구현 :  몬스터와 자동전투 구현
 - 기획 : 몬스터 기획 (수성, 금성, 화성)

2. 다음 미팅
 - 2D 클라이언트를 3D 클라이언트로 바꿔서 서버 연동
 - 기획 : 행성별 스테이지 기획 - 지구
    * 1에서 30레벨까지 레벨업을 하는 구간
    * World of warcraft의 엘윈숲 + 서부몰락지대 정도의 크기 필요  (참조 : https://m.blog.daum.net/hellvava/55)
    * 레벨별 동선, 각 지역의 특징 (비주얼<숲, 사막, 초원....> 마을위치, 던전위치, 몬스터배치, 중요 NPC 배치), 도로또는 길 표시
 - 서버/클라이언트 맵의 크기를 400X400으로 늘리고, 클라이언트는 플레이어 주위 20X20을 표시 
 - 클라이언트 : 사각기둥에 체스말 이미지를 텍스쳐로 입히기.
 - 11월 15일 오후 6시

3. 쿨타임 처리
 - 수업시간에 배움
 - 일반적인 경우 (마법사용 캐스팅 타임, 부활)
  * 3초후에 해야할 일이 있다면, 작업큐에 시간을 적어서 집어 넣는다.   (마법사용 캐스팅타임)
  * 타이머쓰레드가 있으서 작업큐에 있는 작업중 시간이된 작업을 꺼내서 실행한다.
 - 이동 : 이동 후 이동 시간을 기록하고, 쿨타임이 지나기 전에는 이동하지 않는다. (전투도 마찬가지)

2021-11-15
------------
1. 진행상황
 - 3D 클라이언트 서버 연동, 멀티 플레이 가능, 시야 적용
 - 기획 : 10km X 10km를 해왔는데 엄청 넓다. 1km x 1km만 해도 엄청 넓다.

2. 3D Visual 과제
   * 직사각형을 3D 모델로 교체 (아직 수업 진도가 나가지 않음) -> 3D 모델의 애니메이션 구현
   * 지형의 높낮이 구현 (Height Map) -> 지형에 텍스쳐 입히기 -> 지형지물 배치 (나무, 바위, 개울물..)
     - 유니티에서 지형을 만든 다음에 정보를 빼내서 클라이언트에서 렌더링 하기.
   * Shading, Lighting, 그림자


3. 다음 미팅
 - 직육면체에 텍스쳐 입히기
 - Unity(또는 언리얼)에서 1km X 1km 지구 맵을 만들어보기 (지형, 나무, 바위 배치)
  * height map 정보를 뽑아서 렌더링하기
 - 나무와 바위의 좌표를 (Unity에서 뽑던가, 눈대중으로 손으로 입력하던가) 얻어서, 클라이언트에 녹색 직육면체로 표시, 서버에서 충돌처리
 - 기획 : 몬스터 기획 ( 몬스터 이름, 생김새, 레벨, 사용 스킬, 속성(불/물/나무/강철/바람))
                           ( 지구 맵에 어디에 배치할 것인가. )
 - 11월 29일 오후 6시 


2021-11-29
-------------
1. 진행상황
 - 직육면체에 텍스쳐 입히기 => 텍스쳐 입히기에 대한 이해 부족으로 수행못함
 - 유니티에 맵을 만들었음 => Height Map을 PNG로 뽑았음.
 - 나무/바위 좌표 유니티에서 뽑기 => 잘 안됨. => [대충 모든 객체를 iterating하면서 x,y,z 좌표를 뽑아서 파일에 적으면 됨]
 - 몬스터 기획 => 종류가 너무 많은 것 같은데, 뭐 많으면 좋으니까 한번 만들어 보도록.

2. 다음 미팅
 - 직육면체 텍스쳐 입히기, 적당한 모델을 골라서 직육면체를 모델로 바꾸기.
 - Height Map을 클라이언트에서 읽어서 렌더링하기
 - 나무/바위 좌표 유니티에서 뽑기
 - 기획 : 아이템 기획, 스킬 기획 (지구 행성에서 사용되는 것만)

3. 다음미팅
 - 12월 13일 월요일 오후 6시

2021-12-13
------------
1. 진행상황
 - 발표 PPT :
  * DB 연동이나, LUA 연동은 중점 연구과제가 될 수 없음
  * DX12 이펙트 시스템, 인공지는 동료 시스템 => 발표 전에 기획서에 내용을 추가 하도록.

2. 기획서
 - 지금까지 만든 기획문서를 하나의 문서로 정리할 것

3. 다음미팅
 - 12월 27일 월요일 오후 7시

2021-12-27
-------------
1. 진행상황
 - 종합설계기획발표
  * 통과

2. 진행상황
 - 클라이언트
  * 유니티에서 작성한 맵에서 Heigth 맵과, Object 좌표 뽑아내기
 - 서버
  * 클라이언트 연동, 다중 접속, 시야처리, 기본 전투

3. 작업일지 작성 시작
 - 일주일단위로 진행상황을 기록

4. 서버 구현 스케줄 : 1-2월
 - <기획서 몬스터 구현 : 종류별로 몬스터를 구현해서, 기획서의 위치에 스폰>
 - <유니티에서 뽑은 나무/바위 좌표를 서버에서 읽어 들여서, 몬스터 이동 시 출돌처리>
 - <직업, 직업스킬, 속성 구현>
 - <레이드 구현>
 - <레이드 친구 구현>

5. 클라이언트 구현 스케줄 
 - 지형, 장애물 렌더링 (직육면체 가능)
 - 실제 모델 렌더링
 - 실제 모델 텍스쳐 입히기
 - Shading 구현 (빛이 있는 방향은 밝게)
 - 실제 모델 애니메이션 구현
 - 그림자
 - SkyBox, 객체 Picking
 - 전투 Effect (피가 튀고, 파이어볼이 날라가서 터지고, 칼질 소리가 들리고... )

4. 다음 미팅
 - 1월 10일 월요일 오후 4시
 - 직육면체 텍스쳐 입히기
 - 적당한 모델을 골라서 직육면체를 모델로 바꾸기.
 - Height Map을 클라이언트에서 읽어서 렌더링하기
 - 유니티에서 뽑은 나무/바위 좌표에 빨간색 원기둥 그리기.
 - 기획서 몬스터 구현 : 종류별로 몬스터를 구현해서, 기획서의 위치에 스폰
  * 몬스터 머리위에 몬스터이름, HP Bar 표시
  * 몬스터는 Spawn위치 5x5를 랜덤하게 이동 (1초에 1m)
  * 플레이어가 때리면 반격

2022-01-10
-------------
1. 진행상황
 - 서버 : Overlapped I/O -> IOCP
       몬스터 스폰, 데미지 입히기까지 구현, 때리면 쫒아오기, HP가 0이되면 사망/리스폰
 - 클라이언트
  * 텍스쳐 입히기 안됨.   ====>>>> 큰일!!!!!!

2. 수정필요
 - RealServer => 시야가 너무 좁다 키우자
                      몬스터가 너무 느리다 속도 UP
                      플레이어 속도 제한 넣자.
                      몬스터 종류별로 색을 다르게 하자.

5. 다음미팅
 - 작업일지 작성
 - 서버 : 플레이어 HP, 레벨 구현, 몬스터를 종류별로 배치 (기획서에 작성되어 있는 대로)
 - 서버 장애물 처리 : 클라이언트에 장애물을 육각기둥으로 표시, 플레이어와 몬스터이동시 장애물 충돌처리 (당장은 오른쪽으로 돌기 => 언젠가는 A* 바꿔야 한다.)
  * 플레이어의 공격시 서버에서 ATTACK packet을 클라이언트에 보내 공격 애니메이션을 수행하게 함.     
  * 모든 플레이어는 방향을 가지고 있음,  클라이언트에서 방향을 전환하면 서버에서 방향전환을 브로드캐스트 한다.
 - 클라이언트
  * 3D Max에서 애니메이션 제작 => FBX export => Client에서 import => 애니메이션 플레이
   - 간단한 모델과 애니메이션 제작 : 원기둥 몸통, 원기둥 팔 (플레이어는 2개의 원기둥으로 이루어져 있다.)
   - 애니메이션 3종류 : IDLE, MOVE, ATTACK (Simple Animation PPTX 참조)
    * 클라이언트에서 플레이어는 제자리에 있을 때 IDLE 애니메이션, 이동시 MOVE 애니메이션, 서버에서 ATTACK 패킷이 날라오면 한번 ATTACK애니메이션을 수행
   - 방향 전환시 (카메라 전환) 바라보고 있는 방향을 서버에 패킷으로 보낸다.
  * 유니티에서 뽑은 나무/바위 좌표에 빨간색 원기둥 그리기.
  * 카메라 이동 시 Object와 바닥이 미끌어지는 문제 해결
 - 서버프로그래머에게 클라이언트 작업 떠넘기기
  1. 화면에 문자 출력 (DX12)
    => 서버에서 보내준 플레이어/몬스터의 이름을 위에 띄우기
  2. 화면에 UI 출력 ( 포토샾으로 만든 UI 이미지를 화면에 표시하기, 예) 인벤토리 틀, HP 바 (서버에서, HP와 HP_MAX를 클라이언트에 패킷으로 알려줄것))
    => 플레이어와 몬스터의 HP 감소를 HP 바로 표시.
 - 1월 24일 오후 4시 



  